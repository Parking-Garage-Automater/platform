version: '3.8'

services:
  traefik:
    image: localhost:5000/parkers/traefik:latest
    container_name: parking_traefik
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.traefik-network.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=traefik-network"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.email=moorenn@tcd.ie"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # the traefik dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./letsencrypt:/letsencrypt
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - traefik-network
    restart: unless-stopped

  postgres:
    image: postgres:15
    container_name: parking_postgres
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123parkers!987
      - POSTGRES_DB=parking_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - traefik-network
      - postgres-network
    restart: unless-stopped
    labels:
      - "traefik.enable=false"

  gate-service:
    image: localhost:5000/parkers/gate-service:latest
    build:
      context: /home/automation/gate-service
      dockerfile: Dockerfile
    container_name: parking_gate_service
    depends_on:
      - postgres
    networks:
      - traefik-network
      - postgres-network
    restart: unless-stopped
    env_file:
      - /home/automation/platform/.env
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-network"
      - "traefik.http.routers.gate-service.rule=PathPrefix(`/gs`)"
      - "traefik.http.routers.gate-service.entrypoints=traefik-network"
      - "traefik.http.routers.gate-service-secure.rule=PathPrefix(`/gs`)"
      - "traefik.http.routers.gate-service-secure.entrypoints=websecure"
      - "traefik.http.routers.gate-service-secure.tls=true"
      - "traefik.http.routers.gate-service-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.gate-service.loadbalancer.server.port=8000"

      - "traefik.http.middlewares.cors.headers.accessControlAllowMethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.cors.headers.accessControlAllowHeaders=Content-Type,Authorization,X-Requested-With"
      - "traefik.http.middlewares.cors.headers.accessControlAllowOriginList=*"
      - "traefik.http.middlewares.cors.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.cors.headers.addVaryHeader=true"
      - "traefik.http.routers.gate-service.middlewares=cors"

  ocr-service:
    image: localhost:5000/parkers/ocr-service:latest
    build:
      context: /home/automation/ocr-service
      dockerfile: Dockerfile
    container_name: parking_ocr_service
    env_file:
      - /home/automation/platform/.env
    networks:
      - traefik-network
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-network"
      - "traefik.http.routers.ocr-service.rule=PathPrefix(`/ocr`)"
      - "traefik.http.routers.ocr-service.entrypoints=traefik-network"
      - "traefik.http.routers.ocr-service-secure.rule=PathPrefix(`/ocr`)"
      - "traefik.http.routers.ocr-service-secure.entrypoints=websecure"
      - "traefik.http.routers.ocr-service-secure.tls=true"
      - "traefik.http.routers.ocr-service-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.ocr-service.loadbalancer.server.port=7134"

      - "traefik.http.middlewares.cors.headers.accessControlAllowMethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.cors.headers.accessControlAllowHeaders=Content-Type,Authorization,X-Requested-With"
      - "traefik.http.middlewares.cors.headers.accessControlAllowOriginList=*"
      - "traefik.http.middlewares.cors.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.cors.headers.addVaryHeader=true"
      - "traefik.http.routers.ocr-service.middlewares=cors"

  parking-spot-tracker:
    image: localhost:5000/parkers/parking-spot-tracker:latest
    build:
      context: /home/automation/parking-spot-tracker
      dockerfile: Dockerfile
    container_name: parking_spot_tracker
    networks:
      - traefik-network
    restart: unless-stopped
    env_file:
      - /home/automation/platform/.env
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-network"
      - "traefik.http.routers.spot-tracker.rule=PathPrefix(`/pt`)"
      - "traefik.http.routers.spot-tracker.entrypoints=traefik-network"
      - "traefik.http.routers.spot-tracker-secure.rule=PathPrefix(`/pt`)"
      - "traefik.http.routers.spot-tracker-secure.entrypoints=websecure"
      - "traefik.http.routers.spot-tracker-secure.tls=true"
      - "traefik.http.routers.spot-tracker-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.spot-tracker.loadbalancer.server.port=3000"

      - "traefik.http.middlewares.cors.headers.accessControlAllowMethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.cors.headers.accessControlAllowHeaders=Content-Type,Authorization,X-Requested-With"
      - "traefik.http.middlewares.cors.headers.accessControlAllowOriginList=*"
      - "traefik.http.middlewares.cors.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.cors.headers.addVaryHeader=true"
      - "traefik.http.routers.spot-tracker.middlewares=cors"

  payment-service:
    image: localhost:5000/parkers/payment-service:latest
    build:
      context: /home/automation/payment-service
      dockerfile: Dockerfile
    container_name: parking_payment_service
    depends_on:
      - postgres
    networks:
      - traefik-network
      - postgres-network
    restart: unless-stopped
    env_file:
      - /home/automation/platform/.env
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-network"
      - "traefik.http.routers.payment-service.rule=PathPrefix(`/ps`)"
      - "traefik.http.routers.payment-service.entrypoints=traefik-network"
      - "traefik.http.routers.payment-service-secure.rule=PathPrefix(`/ps`)"
      - "traefik.http.routers.payment-service-secure.entrypoints=websecure"
      - "traefik.http.routers.payment-service-secure.tls=true"
      - "traefik.http.routers.payment-service-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.payment-service.loadbalancer.server.port=8001"

      - "traefik.http.middlewares.cors.headers.accessControlAllowMethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.cors.headers.accessControlAllowHeaders=Content-Type,Authorization,X-Requested-With"
      - "traefik.http.middlewares.cors.headers.accessControlAllowOriginList=*"
      - "traefik.http.middlewares.cors.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.cors.headers.addVaryHeader=true"
      - "traefik.http.routers.payment-service.middlewares=cors"

  user-service:
    image: localhost:5000/parkers/user-service:latest
    build:
      context: /home/automation/user-service
      dockerfile: Dockerfile
    container_name: parking_user_service
    networks:
      - traefik-network
      - postgres-network
    restart: unless-stopped
    env_file:
      - /home/automation/platform/.env
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-network"
      - "traefik.http.routers.user-service.rule=PathPrefix(`/us`)"
      - "traefik.http.routers.user-service.entrypoints=traefik-network"
      - "traefik.http.routers.user-service-secure.rule=PathPrefix(`/us`)"
      - "traefik.http.routers.user-service-secure.entrypoints=websecure"
      - "traefik.http.routers.user-service-secure.tls=true"
      - "traefik.http.routers.user-service-secure.tls.certresolver=letsencrypt"
      - "traefik.http.services.user-service.loadbalancer.server.port=9001"

      - "traefik.http.middlewares.cors.headers.accessControlAllowMethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.cors.headers.accessControlAllowHeaders=Content-Type,Authorization,X-Requested-With"
      - "traefik.http.middlewares.cors.headers.accessControlAllowOriginList=*"
      - "traefik.http.middlewares.cors.headers.accessControlMaxAge=100"
      - "traefik.http.middlewares.cors.headers.addVaryHeader=true"
      - "traefik.http.routers.user-service.middlewares=cors"

networks:
  traefik-network:
    external: true
  postgres-network:
    driver: bridge
    internal: true

volumes:
  postgres_data:
